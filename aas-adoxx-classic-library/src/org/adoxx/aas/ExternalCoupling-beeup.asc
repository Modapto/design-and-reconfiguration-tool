ON_EVENT "AppInitialized" {
  #---- INIT BEE-UP SPECIFIC GLOBAL VARIABLES
  EXECUTE file:("db:\\ASC_GlobalVariables_ER.asc")
  EXECUTE file:("db:\\ASC_GlobalVariables_UML.asc")
  EXECUTE file:("db:\\ASC_GlobalVariables_PN.asc")
  EXECUTE file:("db:\\ASC_GlobalVariables_FC.asc")

  #---- LOAD MODULES / COMPONENTS / "LIBRARIES" (global support functions / procedures)
  EXECUTE file:("db:\\ASC_GlobalProcedures_ExtensionManagement.asc")
  EXECUTE file:("db:\\ASC_GlobalFunctions_MapSupport.asc")
  EXECUTE file:("db:\\ASC_GlobalFunctions_Conversion.asc")
  EXECUTE file:("db:\\ASC_GlobalFunctions_JSON.asc")
  EXECUTE file:("db:\\ASC_GlobalFunctions_RandomDistributions.asc")
  EXECUTE file:("db:\\ASC_GlobalFunctions_StringSupport.asc")
  EXECUTE file:("db:\\ASC_GlobalFunctions_DateTime.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_RecordSupport.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_Logging.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_ConfigFiles.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_Cloning.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_CloneUI.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_ExecAsc.asc")
  EXECUTE file:("db:\\ASC_Bridge_HttpRequestDll.asc")
  EXECUTE file:("db:\\ASC_OliveIntegration_GlobalProcedures.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_ASRE.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_AutoStart.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_VersionCheck.asc")

  #---- LOAD BEE-UP SPECIFIC FUNCTIONS / PROCEDURES
  EXECUTE file:("db:\\ASC_GlobalProcedures_General.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_CreateSQL.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_PNSim.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_PNStateStoreage.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_ExecuteFlowchart.asc")
  # the following requires ASC_GlobalProcedures_ExecuteFlowchart.asc
  EXECUTE file:("db:\\ASC_GlobalProcedures_ExecAttrProf-beeup.asc")
  EXECUTE file:("db:\\ASC_GlobalProcedures_SkeletonGeneration.asc")

  #---- SET ADDITIONAL VARS
  CC "Application" GET_PATH
  SETL str_basePath:(path)
  #-- Variable that specifies where donations can be provided
  SETG g_beeup_donationwebsite:("https://bee-up.omilab.org/activities/bee-up/donate-details/")
  #-- Extension Manager initialization
  SETG g_em_encounteredDuplicates:(map())
  EM_INIT_GLOBALS duplicateIdentifiers:g_em_encounteredDuplicates
  #-- Global logger
  SETG g_log_globalConfigFile:("db:\\log_global.properties")
  SETG g_log_globalLogger:(map())
  SETG g_log_namedLoggers:(map())
  LOGGER_INIT_CONFIG configFile:(g_log_globalConfigFile) loggerConfig:g_log_globalLogger
  #-- ASRE global configuration
  SETG g_asre_configFile:("db:\\asre.properties")
  SETG g_asre_config:(map())
  ASRE_INIT_CONFIG configFile:(g_asre_configFile) asreConfig:g_asre_config
  #-- AutoStart global configuration
  SETG g_autostart_configFile:("db:\\autostart.properties")
  SETG g_autostart_config:(map())
  AUTO_INIT_CONFIG configFile:(g_autostart_configFile) autostartConfig:g_autostart_config
  #-- Version Check global configuration
  SETG g_vercheck_toolConfigFile:("db:\\beeup-ver.properties")
  SETG g_vercheck_toolConfig:(map())
  SETG g_vercheck_otherConfigs:(array(0))
  VERCHECK_INIT_CONFIG configFile:(g_vercheck_toolConfigFile) vercheckConfig:g_vercheck_toolConfig


  #---- ADAPT UI
  # Remove menu entry Documentation and some icons, since it's not available
  CC "Application" REMOVE_MENU_ITEM component:"importexport" item:"Documentation"
  CC "Application" SET_ICON_VISIBLE component:"importexport" name:"HTML" visible:0
  CC "Application" SET_ICON_VISIBLE component:"importexport" name:"DOCU" visible:0
  CC "Application" SET_ICON_VISIBLE component:"importexport" name:"EXCUST" visible:0

  #---- LOAD PATCH
  # Read the Patch file. It allows to patch at least some things
  CC "Application" GET_PATH
  CC "AdoScript" FILE_EXISTS file:(path + "\\patches\\BeeUpPatch.asc")
  IF (exists) {
    EXECUTE file:(path + "\\patches\\BeeUpPatch.asc")
  }

  #---- EXECUTE AutoStart
  AUTO_EXECUTE_AUTOSTART_PROFILES autostartConfig:(g_autostart_config)

  #---- Extension Management
  # Catch a general error when encountering duplicate identifiers that have been initialized
  IF ((LEN g_em_encounteredDuplicates["variables"]) OR (LEN g_em_encounteredDuplicates["functions"]) OR (LEN g_em_encounteredDuplicates["procedures"])) {
    CC "AdoScript" VIEWBOX text:("While loading extensions the following identifiers have been declared multiple times:\n\n" + STR g_em_encounteredDuplicates)
  }

  # Run automatic version check for tool and possibly other things.
  VERCHECK_PERFORM_AUTOMATIC_CHECK vercheckConfig:g_vercheck_toolConfig
  IF (type(g_vercheck_otherConfigs) = "array") {
    VERCHECK_PERFORM_MULTIPLE_AUTOMATIC_CHECKS vercheckConfigs:g_vercheck_otherConfigs
  }

  #---- Adding SOME of the menu buttons
  # Add a menu item that links to the Bee-Up website
  CC "Application" INSERT_MENU_ITEM component:("all") item:("Help\tVisit Bee-Up website") pos:before:("Info...") {
    START ("explorer \"https://bee-up.omilab.org\"")
  }
  # Add a "Donate" menu item if there is a website set for it.
  IF (type(g_beeup_donationwebsite) = "string") {
    CC "Application" INSERT_MENU_ITEM component:("all") item:("Help\tDonate") pos:before:("Info...") {
      START ("explorer \"" + g_beeup_donationwebsite + "\"")
    }
  }
  # Add the "books" distributed with Bee-Up to the help menu
  ADD_FILES_TO_HELPMENU (str_basePath + "\\books\\english") str_delimiter:("_") str_filter:("*.pdf")

  EXECUTE file:("db:\\AAS_Utils.asc")
  EXECUTE file:("db:\\ADO2BPMN_v0.5.asc")
}



ON_EVENT "MOCTimer" {
  #---- ASRE
  IF (try(g_asre_config["mocPoller"], 0)) {
    ASRE_MOCTIMER_POLLER
  }
}



# Performs various checks and also some notation improvements
ON_EVENT "AfterEditAttributeValue" {
  SET bool_wrong:(0)

  IF (attrid = global_id_sd_minloop OR attrid = global_id_sd_maxloop) {
    # Check if set minimul and maximum loops in sequence diagrams are correct (min <= max)
    CHECK_MINMAX_VALUES (instid) id_minattr:(global_id_sd_minloop) id_maxattr:(global_id_sd_maxloop) bool_wrong:bool_wrong
    IF (bool_wrong) {
      CC "AdoScript" ERRORBOX ("The minimum has to be smaller then the maximum!")
    }
  } ELSIF (attrid = global_id_er_mincard OR attrid = global_id_er_maxcard) {
    # Check if set ER cardinalities are correct (min <= max)
    CHECK_MINMAX_VALUES (instid) id_minattr:(global_id_er_mincard) id_maxattr:(global_id_er_maxcard) bool_wrong:bool_wrong
    IF (bool_wrong) {
      CC "AdoScript" ERRORBOX ("The minimum has to be smaller then the maximum!")
    }
  } ELSIF (attrid = global_id_pn_toks OR attrid = global_id_pn_capacity) {
    # Check in a petri net place if the capacity is larger than the amount of tokens, unless the capacity is set to 0
    CC "Core" GET_ATTR_VAL objid:(instid) attrid:(global_id_pn_capacity)
    IF (val <> 0) {
      CHECK_MINMAX_VALUES (instid) id_minattr:(global_id_pn_toks) id_maxattr:(global_id_pn_capacity) bool_wrong:bool_wrong
      IF (bool_wrong) {
        CC "AdoScript" ERRORBOX ("The amount of Tokens has to be smaller or equal to the allowed Capacity or the Capacity has to be set to 0 (indicating 'unlimited capacity')!")
      }
    }
  } ELSIF (attrid = global_id_sd_timedelay) {
    # Bends the connector in a sequence diagram when the "Time delay" attribute is changed
    CC "Core" GET_ATTR_VAL objid:(instid) attrid:(attrid) as-string
    IF (val = "yes") {
      BEND_CONNECTOR_CENTER (instid) val_xoff:0.4 val_yoff:0.4
    } ELSE {
      UNBEND_CONNECTOR_CENTER (instid)
      IF (ecode <> 0) {
        CC "AdoScript" ERRORBOX ("Could not automatically adapt bend points.\n" +
            "Please change them manually if necessary.")
      }
    }
  }
}



# Stores the current state of a Petri Net when a State Storage is added by the modeller
ON_EVENT "AfterCreateModelingNode" {
  SETL val_eventorigin:(origin)
  SETL id_obj:(objid)
  SETL id_class:(classid)

  IF (id_class = global_id_pn_statestoreclass) {
    IF (val_eventorigin = 0) {
      PN_STORE_STATE (id_obj)
    } ELSIF (val_eventorigin = 1) {
      PN_UPDATE_INTERREFS (id_obj)
    }
  }
}



#---- Adding menues
# Modelling
ITEM separator modeling:"~Model" pos2:10
ITEM "Clone active model" modeling:"~Model" pos2:11
CLN_UI_CLONE_ACTIVE_MODEL
ITEM "Clone set of models" modeling:"~Model" pos2:12
CLN_UI_CLONE_SELECT_MODEL_SET


# Multiple components
ITEM separator modeling:"E~xtras" analysis:"E~xtras" simulation:"E~xtras" evaluation:"E~xtras" importexport:"E~xtras"
ITEM "Execute E~xternal Functionality" modeling:"E~xtras" analysis:"E~xtras" simulation:"E~xtras" evaluation:"E~xtras" importexport:"E~xtras"
EXECAP_EXECUTE_ATTRPROF_GUI
ITEM "Execute AdoScript (~EDITBOX)" modeling:"E~xtras" analysis:"E~xtras" simulation:"E~xtras" evaluation:"E~xtras" importexport:"E~xtras"
EXEC_ASC_FROM_EDITBOX
ITEM "Execute AdoScript (~File)" modeling:"E~xtras" analysis:"E~xtras" simulation:"E~xtras" evaluation:"E~xtras" importexport:"E~xtras"
EXEC_ASC_FROM_FILE

ITEM separator modeling:"E~xtras" analysis:"E~xtras" simulation:"E~xtras" evaluation:"E~xtras" importexport:"E~xtras"
ITEM "Edit internal configuration file" modeling:"E~xtras" analysis:"E~xtras" simulation:"E~xtras" evaluation:"E~xtras" importexport:"E~xtras"
CF_EDIT_CONFIGFILE_FROM_DB_GUI filter:(".*(\\.properties|\\.cfg)$") configMap:(map())

ITEM separator modeling:"E~xtras" analysis:"E~xtras" simulation:"E~xtras" evaluation:"E~xtras" importexport:"E~xtras"
ITEM "Show event log window" modeling:"E~xtras" analysis:"E~xtras" simulation:"E~xtras" evaluation:"E~xtras" importexport:"E~xtras"
LOGGER_SHOW_LOG_WINDOW loggerConfig:g_log_globalLogger
ITEM "Set log file location" modeling:"E~xtras" analysis:"E~xtras" simulation:"E~xtras" evaluation:"E~xtras" importexport:"E~xtras"
LOGGER_SET_LOG_FILE_GUI loggerConfig:g_log_globalLogger
ITEM "Set log levels" modeling:"E~xtras" analysis:"E~xtras" simulation:"E~xtras" evaluation:"E~xtras" importexport:"E~xtras"
LOGGER_SET_ALL_LOG_LEVELS_GUI loggerConfig:g_log_globalLogger

ITEM separator modeling:"~Help" analysis:"~Help" simulation:"~Help" evaluation:"~Help" importexport:"~Help"
ITEM "Check for new version" modeling:"~Help" analysis:"~Help" simulation:"~Help" evaluation:"~Help" importexport:"~Help"
VERCHECK_CHECK_FOR_NEW_VERSION vercheckConfig:g_vercheck_toolConfig



ITEM "Export AAS JSON" acquisition:"MODAPTO" modeling:"MODAPTO" analysis:"MODAPTO" simulation:"MODAPTO" evaluation:"MODAPTO" importexport:"MODAPTO"
AAS_EXPORT_JSON

ITEM "Import AAS JSON" acquisition:"MODAPTO" modeling:"MODAPTO" analysis:"MODAPTO" simulation:"MODAPTO" evaluation:"MODAPTO" importexport:"MODAPTO"
AAS_IMPORT_JSON

ITEM "Export BPMN XML" acquisition:"MODAPTO" modeling:"MODAPTO" analysis:"MODAPTO" simulation:"MODAPTO" evaluation:"MODAPTO" importexport:"MODAPTO"
EXPORT_MODEL_AS_BPMN

ITEM "Export Data Binding" acquisition:"MODAPTO" modeling:"MODAPTO" analysis:"MODAPTO" simulation:"MODAPTO" evaluation:"MODAPTO" importexport:"MODAPTO"
EXPORT_DATA_BINDING_JSON